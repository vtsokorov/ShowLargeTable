<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>kernel.com</groupId>
  <artifactId>ShowLargeTable</artifactId>
  <version>0.0.1</version>
  <dependencies>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>5.3.6.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.3.6.Final</version>
        </dependency>
        <dependency>
            <groupId>org.firebirdsql.jdbc</groupId>
            <artifactId>jaybird-jdk18</artifactId>
            <version>3.0.5</version>
        </dependency>
  </dependencies>
  <build>
	<plugins>
	  <!-- set main class in manifest when package in jar -->
	  	<plugin>
	    	<groupId>org.apache.maven.plugins</groupId>
	    	<artifactId>maven-jar-plugin</artifactId>
			<version>3.0.2</version>
			<configuration>
				<archive>
				<!-- CHANGE START -->
					<manifest>
						<addClasspath>true</addClasspath>
						<classpathPrefix>lib/</classpathPrefix>
					</manifest>
				<!-- CHANGE END -->
					<manifestEntries>
						<Main-Class>main.Runner</Main-Class>
					</manifestEntries>
				</archive>
			</configuration>
		</plugin>
	 	<!-- CHANGE START -->
		<!-- copy libraries to folder "lib" -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-dependency-plugin</artifactId>
			<version>3.0.0</version>
			<executions>
				<execution>
					<id>copy</id>
					<phase>package</phase>
					<goals>
						<goal>copy-dependencies</goal>
					</goals>
					<configuration>
						<outputDirectory>${project.build.directory}/lib</outputDirectory>
					</configuration>
				</execution>
			</executions>
		</plugin>
		<!-- CHANGE END -->
		<!-- copy resource folder from 'external-resources/' to 'target/external-resources' -->
		<plugin>
			<artifactId>maven-resources-plugin</artifactId>
			<version>3.0.2</version>
			<executions>
				<execution>
					<id>copy-resources</id>
					<phase>validate</phase>
					<goals>
						<goal>copy-resources</goal>
					</goals> 
					<configuration>
						<overwrite>true</overwrite>
						<outputDirectory>${project.build.directory}/lib/external-resources</outputDirectory>
						<resources>          
							<resource>
								<directory>external-resources/</directory>
								<filtering>false</filtering>
							</resource>
						</resources>              
					</configuration> 
				</execution>
			</executions>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>3.8.0</version>
			<configuration>
				<source>1.8</source>
				<target>1.8</target>
				<fork>true</fork>
				<executable>C:\Program Files\Java\jdk1.8.0_144\bin\javac</executable>
			</configuration>
		</plugin>
		<plugin>
			<artifactId>maven-deploy-plugin</artifactId>
			<configuration>
				<skip>true</skip>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-source-plugin</artifactId>
			<version>3.0.0</version>
			<executions>
				<execution>
					<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
				</execution>
			</executions>
		</plugin>      
	</plugins>
	 <resources>
	 	<resource>
	     	<directory>${project.basedir}/src/main/resources/</directory>
	       	<includes><include>*.xml</include></includes>
	     </resource>
	     <resource>
	     	<directory>${project.basedir}/images/</directory>
	       	<includes><include>*.png</include></includes>
	     </resource>
     </resources>
  </build>
  <packaging>jar</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.javadoc.skip>true</maven.javadoc.skip>
    </properties>
</project>